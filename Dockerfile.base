FROM python:3.10.12-slim as python-base

COPY requirements.txt .
# RUN pip install --no-cache-dir -r requirements.txt
RUN pip install --no-cache-dir torch==2.4.0+cpu torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu \
    && pip install --no-cache-dir -r requirements.txt

# Dockerfile.base
FROM ros:galactic  as ros2-base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    ros-galactic-cv-bridge \
    ros-galactic-image-transport \
    ros-galactic-rclcpp \
    ros-galactic-rclpy \
    ros-galactic-geometry-msgs \
    ros-galactic-sensor-msgs \
    ros-galactic-laser-proc \
    ros-galactic-control-msgs \
    ros-galactic-behaviortree-cpp-v3 \
    python3-colcon-common-extensions \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

COPY --from=python-base /usr/local/lib/python3.10/site-packages /usr/local/lib/python3.10/site-packages
COPY --from=python-base /usr/local/bin /usr/local/bin

# Set up the workspace
WORKDIR /ros2_ws/src
COPY ./src/. .

WORKDIR /ros2_ws

# # Install Python dependencies from requirements.txt using Tsinghua mirror
# RUN pip3 install --no-cache-dir -i https://pypi.tuna.tsinghua.edu.cn/simple -r /ros_ws/requirements.txt

# # Install ultralytics with CPU-only support
# RUN pip3 install --no-cache-dir torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu 

# RUN pip3 install --no-cache-dir -i https://pypi.tuna.tsinghua.edu.cn/simple ultralytics

# Build the ROS workspace
# RUN /bin/bash -c "source /opt/ros/galactic/setup.bash && colcon build"

RUN . /opt/ros/galactic/setup.sh && colcon build

# Environment setup
ENV ROS_DISTRO=galactic
ENV ROS_DOMAIN_ID=15
RUN echo "source /ros_ws/install/setup.bash" >> /root/.bashrc


# Set entrypoint to source the ROS setup script
# ENTRYPOINT ["/bin/bash", "-c", "source /opt/ros/galactic/setup.bash && source /ros_ws/install/setup.bash "]

ENTRYPOINT [ "/ros_entrypoint.sh" ]
CMD [ "bash", "-c", "source /ros2_ws/install/setup.bash" ]